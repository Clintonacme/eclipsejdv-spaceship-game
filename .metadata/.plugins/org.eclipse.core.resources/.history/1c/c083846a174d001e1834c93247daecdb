package principal;

import java.awt.Canvas;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.image.BufferStrategy;

import javax.swing.JFrame;

public class Window extends JFrame implements Runnable{

	//creacion de objetos
	public static final int WIDTH =1000, HEIHT = 100;
	private Canvas canvas;
	//hilo de vida
	private Thread thread;
	private boolean running = false;
	
	private BufferStrategy bs;
	private Graphics g;
	
	public Window()
	{
		//primeros pasos para el juego
		setTitle("Space Ship Game");
		setSize(WIDTH, HEIGHT);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setResizable(false);
		setLocationRelativeTo(null);
		setVisible(true);
		
		//para el canvas
		canvas = new Canvas();
		canvas.setPreferredSize(new Dimension(WIDTH, HEIGHT));
		canvas.setMaximumSize(new Dimension(WIDTH, HEIGHT));
		canvas.setMinimumSize(new Dimension(WIDTH, HEIGHT));
		canvas.setFocusable(true);
		
		
	}
	
	
	
	public static void main(String[] args) {
		new Window().Start();
	}
	
	//método actualizar
	private void update(){
		
	}
	
	//método dibujar usando el canvas
	private void draw(){
		bs = canvas.getBufferStrategy();
		
		if(bs == null){
			canvas.createBufferStrategy(3);
			return;
		}
		g = bs.getDrawGraphics();
		
		//Empezamos a dibujar
		
		g.drawRect(0, 0, 100, 100);
		
		//Terminando de dibujar
		
		g.dispose();
		bs.show();
		
		
	}

	@Override
	public void run() {
		
		while(running)
		{
			
		}
		Stop();
	}
		//creacion de metodos
		
		private void Start(){
			thread  = new Thread(this);
			thread.start();
			running = true;
		}
		
		private void Stop(){
			try {
				thread.join();
				running = false;
			} catch (InterruptedException e) {				
				e.printStackTrace();
			}
			
		}
	

}
